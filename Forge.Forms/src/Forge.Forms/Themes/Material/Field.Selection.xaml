<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:annotations="clr-namespace:Forge.Forms.Annotations"
    xmlns:defaults="clr-namespace:Forge.Forms.FormBuilding.Defaults"
    xmlns:formBuilding="clr-namespace:Forge.Forms.FormBuilding"
    xmlns:internal="clr-namespace:Forge.Forms.Controls.Internal"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Forge.Forms.aalex675;component/Themes/Material/IconStyles.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="MaterialComboBoxSelectionPresenterTemplate" TargetType="{x:Type defaults:SelectionPresenter}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <materialDesign:PackIcon
                Grid.Column="0"
                Width="24"
                Height="24"
                Margin="0,0,16,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Kind="{formBuilding:FormBinding Icon}"
                Style="{StaticResource MaterialColoredIconStyle}"
                Visibility="{formBuilding:FormBinding IconVisibility}" />
            <ComboBox
                Name="ValueHolderControl"
                Grid.Column="1"
                Margin="0,-14,0,0"
                VerticalAlignment="Center"
                internal:FocusHelper.InitialFocus="{formBuilding:FormBinding InitialFocus}"
                materialDesign:ComboBoxAssist.ShowSelectedItem="True"
                materialDesign:HintAssist.Hint="{formBuilding:FormBinding Name}"
                DisplayMemberPath="{formBuilding:FormBinding DisplayPath}"
                IsEnabled="{formBuilding:FormBinding IsNotReadOnly}"
                ItemStringFormat="{formBuilding:FormBinding ItemStringFormat}"
                ItemsSource="{formBuilding:FormBinding ItemsSource}"
                SelectedValue="{formBuilding:FormBinding Value}"
                SelectedValuePath="{formBuilding:FormBinding ValuePath}"
                Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                ToolTip="{formBuilding:FormBinding ToolTip}">
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
            </ComboBox>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="MaterialEditableComboBoxSelectionPresenterTemplate" TargetType="{x:Type defaults:SelectionPresenter}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <materialDesign:PackIcon
                Grid.Column="0"
                Width="24"
                Height="24"
                Margin="0,0,16,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Kind="{formBuilding:FormBinding Icon}"
                Style="{StaticResource MaterialColoredIconStyle}"
                Visibility="{formBuilding:FormBinding IconVisibility}" />
            <ComboBox
                Name="ValueHolderControl"
                Grid.Column="1"
                Margin="0,-14,0,0"
                VerticalAlignment="Center"
                internal:FocusHelper.InitialFocus="{formBuilding:FormBinding InitialFocus}"
                materialDesign:ComboBoxAssist.ShowSelectedItem="True"
                materialDesign:HintAssist.Hint="{formBuilding:FormBinding Name}"
                DisplayMemberPath="{formBuilding:FormBinding DisplayPath}"
                IsEditable="True"
                IsEnabled="{formBuilding:FormBinding IsNotReadOnly}"
                ItemStringFormat="{formBuilding:FormBinding ItemStringFormat}"
                ItemsSource="{formBuilding:FormBinding ItemsSource}"
                Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                Text="{formBuilding:FormBinding Value}"
                ToolTip="{formBuilding:FormBinding ToolTip}">
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
            </ComboBox>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="MaterialRadioButtonsSelectionPresenterTemplate" TargetType="{x:Type defaults:SelectionPresenter}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <materialDesign:PackIcon
                Grid.Row="0"
                Grid.Column="0"
                Width="24"
                Height="24"
                Margin="0,0,16,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Kind="{formBuilding:FormBinding Icon}"
                Visibility="{formBuilding:FormBinding IconVisibility}">
                <materialDesign:PackIcon.Style>
                    <Style TargetType="{x:Type materialDesign:PackIcon}">
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBodyLight}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=HintText, Mode=OneWay}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=ValueHolderControl, Mode=OneWay}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=ValueHolderControl, Mode=OneWay}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </materialDesign:PackIcon.Style>
            </materialDesign:PackIcon>
            <TextBlock
                Name="HintText"
                Grid.Row="0"
                Grid.Column="1"
                VerticalAlignment="Center"
                FontSize="{TemplateBinding FontSize}"
                Text="{formBuilding:FormBinding Name}"
                ToolTip="{formBuilding:FormBinding ToolTip}" />
            <ListBox
                Name="ValueHolderControl"
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Padding="0,8,0,0"
                DisplayMemberPath="{formBuilding:FormBinding DisplayPath}"
                IsEnabled="{formBuilding:FormBinding IsNotReadOnly}"
                ItemStringFormat="{formBuilding:FormBinding ItemStringFormat}"
                ItemsSource="{formBuilding:FormBinding ItemsSource}"
                SelectedValue="{formBuilding:FormBinding Value}"
                SelectedValuePath="{formBuilding:FormBinding ValuePath}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Margin" Value="2,6,0,6" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <RadioButton
                                        Padding="20,0,0,0"
                                        IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected, Mode=TwoWay}"
                                        Style="{StaticResource MaterialDesignRadioButton}">
                                        <ContentPresenter />
                                    </RadioButton>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="MaterialRadioButtonsInlineSelectionPresenterTemplate" TargetType="{x:Type defaults:SelectionPresenter}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <materialDesign:PackIcon
                Grid.Row="0"
                Grid.Column="0"
                Width="24"
                Height="24"
                Margin="0,0,16,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Kind="{formBuilding:FormBinding Icon}"
                Visibility="{formBuilding:FormBinding IconVisibility}">
                <materialDesign:PackIcon.Style>
                    <Style TargetType="{x:Type materialDesign:PackIcon}">
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBodyLight}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=HintText, Mode=OneWay}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=ValueHolderControl, Mode=OneWay}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=ValueHolderControl, Mode=OneWay}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </materialDesign:PackIcon.Style>
            </materialDesign:PackIcon>
            <TextBlock
                Name="HintText"
                Grid.Row="0"
                Grid.Column="1"
                VerticalAlignment="Center"
                FontSize="{TemplateBinding FontSize}"
                Text="{formBuilding:FormBinding Name}"
                ToolTip="{formBuilding:FormBinding ToolTip}" />
            <ListBox
                Name="ValueHolderControl"
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Padding="0,8,0,0"
                DisplayMemberPath="{formBuilding:FormBinding DisplayPath}"
                IsEnabled="{formBuilding:FormBinding IsNotReadOnly}"
                ItemStringFormat="{formBuilding:FormBinding ItemStringFormat}"
                ItemsSource="{formBuilding:FormBinding ItemsSource}"
                SelectedValue="{formBuilding:FormBinding Value}"
                SelectedValuePath="{formBuilding:FormBinding ValuePath}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Margin" Value="2,6,12,6" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <RadioButton
                                        Padding="4,0,0,0"
                                        IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected, Mode=TwoWay}"
                                        Style="{StaticResource MaterialDesignRadioButton}">
                                        <ContentPresenter />
                                    </RadioButton>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="MaterialRadioButtonsInlineRightAlignedSelectionPresenterTemplate" TargetType="{x:Type defaults:SelectionPresenter}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions> 
            <materialDesign:PackIcon
                Grid.Row="0"
                Grid.Column="0"
                Width="24"
                Height="24"
                Margin="0,0,16,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Kind="{formBuilding:FormBinding Icon}"
                Visibility="{formBuilding:FormBinding IconVisibility}">
                <materialDesign:PackIcon.Style>
                    <Style TargetType="{x:Type materialDesign:PackIcon}">
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBodyLight}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=HintText, Mode=OneWay}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=ValueHolderControl, Mode=OneWay}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=ValueHolderControl, Mode=OneWay}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </materialDesign:PackIcon.Style>
            </materialDesign:PackIcon>
            <TextBlock
                Name="HintText"
                Grid.Row="0"
                Grid.Column="0"
                VerticalAlignment="Center"
                FontSize="{TemplateBinding FontSize}"
                Text="{formBuilding:FormBinding Name}"
                ToolTip="{formBuilding:FormBinding ToolTip}" />
            <ListBox
                Name="ValueHolderControl"
                Grid.Row="0"
                Grid.Column="1" 
                HorizontalAlignment="Right"
                VerticalAlignment="Center" 
                DisplayMemberPath="{formBuilding:FormBinding DisplayPath}"
                IsEnabled="{formBuilding:FormBinding IsNotReadOnly}"
                ItemStringFormat="{formBuilding:FormBinding ItemStringFormat}"
                ItemsSource="{formBuilding:FormBinding ItemsSource}"
                SelectedValue="{formBuilding:FormBinding Value}"
                SelectedValuePath="{formBuilding:FormBinding ValuePath}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Margin" Value="2,6,12,6" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <RadioButton
                                        Padding="4,0,0,0"
                                        IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected, Mode=TwoWay}"
                                        Style="{StaticResource MaterialDesignRadioButton}">
                                        <ContentPresenter />
                                    </RadioButton>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
    </ControlTemplate>


    <Style x:Key="MaterialSelectionPresenterStyle" TargetType="defaults:SelectionPresenter">
        <Setter Property="Margin" Value="8,16" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource MaterialComboBoxSelectionPresenterTemplate}" />
        <Style.Triggers>
            <DataTrigger Binding="{formBuilding:FormBinding SelectionType}" Value="{x:Static annotations:SelectionType.RadioButtons}">
                <Setter Property="Margin" Value="8" />
                <Setter Property="Template" Value="{StaticResource MaterialRadioButtonsSelectionPresenterTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{formBuilding:FormBinding SelectionType}" Value="{x:Static annotations:SelectionType.RadioButtonsInline}">
                <Setter Property="Margin" Value="8" />
                <Setter Property="Template" Value="{StaticResource MaterialRadioButtonsInlineSelectionPresenterTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{formBuilding:FormBinding SelectionType}" Value="{x:Static annotations:SelectionType.RadioButtonsInlineRightAligned}">
                <Setter Property="Margin" Value="8" />
                <Setter Property="Template" Value="{StaticResource MaterialRadioButtonsInlineRightAlignedSelectionPresenterTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{formBuilding:FormBinding SelectionType}" Value="{x:Static annotations:SelectionType.ComboBoxEditable}">
                <Setter Property="Template" Value="{StaticResource MaterialEditableComboBoxSelectionPresenterTemplate}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>